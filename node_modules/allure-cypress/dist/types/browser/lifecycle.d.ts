import { Status } from "allure-js-commons";
import type { StatusDetails } from "allure-js-commons";
import type { CypressHook, CypressSuite, CypressTest, StepDescriptor } from "../types.js";
export declare const reportRunStart: () => void;
export declare const reportSuiteStart: (suite: CypressSuite) => void;
export declare const reportSuiteEnd: (suite: CypressSuite) => void;
export declare const reportHookStart: (hook: CypressHook, start?: number) => void;
export declare const reportHookEnd: (hook: CypressHook) => void;
export declare const reportTestStart: (test: CypressTest) => void;
export declare const reportStepStart: (id: string, name: string) => void;
export declare const reportStepStop: (step: StepDescriptor, status?: Status, statusDetails?: StatusDetails) => void;
export declare const reportTestPass: () => void;
export declare const reportTestOrHookFail: (err: Error) => void;
export declare const completeHookErrorReporting: (hook: CypressHook, err: Error) => void;
export declare const reportTestSkip: (test: CypressTest) => void;
export declare const reportTestEnd: (test: CypressTest) => void;
export declare const reportScreenshot: (path: string, name: string) => void;
export declare const completeSpecIfNoAfterHookLeft: (context: Mocha.Context) => Cypress.Chainable<unknown> | undefined;
export declare const completeSpecOnAfterHookFailure: (context: Mocha.Context, hookError: Error) => Cypress.Chainable<unknown> | undefined;
export declare const throwAfterSpecCompletion: (context: Mocha.Context, err: any) => void;
export declare const flushRuntimeMessages: () => void;
export declare const completeSpecAsync: () => Cypress.Chainable<unknown> | undefined;
