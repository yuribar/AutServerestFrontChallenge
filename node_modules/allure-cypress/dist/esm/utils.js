export var DEFAULT_RUNTIME_CONFIG = {
  stepsFromCommands: {
    maxArgumentLength: 128,
    maxArgumentDepth: 3
  }
};

/**
 * Pops items from an array into a new one. The item that matches the predicate is the last item to pop.
 * If there is no such item in the array, the array is left unmodified.
 * @param items An array to pop the items from.
 * @param pred A predicate that defines the last item to pop.
 * @returns An array of popped items. The first popped item becomes the first element of this array.
 */
export var popUntilFindIncluded = (items, pred) => {
  var index = items.findIndex(pred);
  return index !== -1 ? toReversed(items.splice(index)) : [];
};
export var toReversed = arr => {
  var len = arr.length;
  var result = new Array(len);
  for (var i = 0; i < len; i++) {
    result[len - i - 1] = arr[i];
  }
  return result;
};
export var last = arr => {
  return arr[arr.length - 1];
};
export var isDefined = value => typeof value !== "undefined";
//# sourceMappingURL=utils.js.map