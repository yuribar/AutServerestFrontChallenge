{"version":3,"file":"utils.js","names":["Status","extractMetadataFromString","getMessageAndTraceFromError","getStatusFromError","ALLURE_REPORT_SYSTEM_HOOK","getAllureState","getProjectDir","resolveStepStatus","IS_WIN","Cypress","platform","getFileNameFromPath","path","substring","lastIndexOf","resolveSpecRelativePath","spec","projectDir","specPath","absolute","length","relative","replaceAll","uint8ArrayToBase64","data","u8arrayLike","Array","isArray","buffer","btoa","String","fromCharCode","apply","getTestStartData","test","_test$wallClockStarte","_test$wallClockStarte2","_objectSpread","getTestMetadata","start","wallClockStartedAt","Date","parse","getTime","call","now","getTestStopData","_test$duration","_retries","duration","retries","getTestSkipData","statusDetails","message","getStepStopData","step","status","id","stop","testReportedKey","Symbol","markTestAsReported","isTestReported","iterateSuites","parent","suiteStack","s","pop","i","suites","push","iterateTests","suite","tests","getSuitePath","reverse","getSuiteTitlePath","filter","title","map","generateApiStepId","nextApiStepId","toString","rawName","cleanTitle","name","labels","links","titlePath","slice","fullNameSuffix","concat","join","isAllureHook","hook","includes","isRootAfterAllHook","root","hookName","isLastRootAfterHook","context","currentAfterAll","rootSuite","hooks","lastAfterAll","findLast","h","hookId","getStatusDataOfTestSkippedByHookError","hookTitle","isEachHook","err","SKIPPED","trace","getSkipReason","suiteName"],"sources":["../../../src/browser/utils.ts"],"sourcesContent":["import { Status } from \"allure-js-commons\";\nimport type { StatusDetails } from \"allure-js-commons\";\nimport { extractMetadataFromString, getMessageAndTraceFromError, getStatusFromError } from \"allure-js-commons/sdk\";\nimport type { CypressHook, CypressStepStopMessage, CypressSuite, CypressTest, StepDescriptor } from \"../types.js\";\nimport { ALLURE_REPORT_SYSTEM_HOOK } from \"./events/mocha.js\";\nimport { getAllureState, getProjectDir } from \"./state.js\";\nimport { resolveStepStatus } from \"./steps.js\";\n\nconst IS_WIN = Cypress.platform === \"win32\";\n\nexport const getFileNameFromPath = (path: string) => path.substring(path.lastIndexOf(IS_WIN ? \"\\\\\" : \"/\") + 1);\n\nexport const resolveSpecRelativePath = (spec: Cypress.Spec) => {\n  const projectDir = getProjectDir();\n  const specPath = projectDir ? spec.absolute.substring(projectDir.length + 1) : spec.relative;\n  return IS_WIN ? specPath.replaceAll(\"\\\\\", \"/\") : specPath;\n};\n\nexport const uint8ArrayToBase64 = (data: unknown) => {\n  // @ts-ignore\n  const u8arrayLike = Array.isArray(data) || data.buffer;\n\n  if (!u8arrayLike) {\n    return data as string;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  return btoa(String.fromCharCode.apply(null, data as number[]));\n};\n\nexport const getTestStartData = (test: CypressTest) => ({\n  ...getTestMetadata(test),\n  start:\n    typeof test.wallClockStartedAt === \"string\"\n      ? Date.parse(test.wallClockStartedAt)\n      : test.wallClockStartedAt?.getTime?.() || Date.now(),\n});\n\nexport const getTestStopData = (test: CypressTest) => ({\n  duration: test.duration ?? 0,\n  retries: (test as any)._retries ?? 0,\n});\n\nexport const getTestSkipData = () => ({\n  statusDetails: { message: \"This is a pending test\" },\n});\n\nexport const getStepStopData = (step: StepDescriptor, status?: Status, statusDetails?: StatusDetails) => {\n  const data: CypressStepStopMessage[\"data\"] = {\n    id: step.id,\n    stop: Date.now(),\n    status: status ?? resolveStepStatus(step),\n  };\n  if (statusDetails) {\n    data.statusDetails = statusDetails;\n  }\n  return data;\n};\n\nconst testReportedKey = Symbol(\"The test has been reported to Allure\");\n\nexport const markTestAsReported = (test: CypressTest) => {\n  (test as any)[testReportedKey] = true;\n};\n\nexport const isTestReported = (test: CypressTest) => (test as any)[testReportedKey] === true;\n\nexport const iterateSuites = function* (parent: CypressSuite) {\n  const suiteStack: CypressSuite[] = [];\n  for (let s: CypressSuite | undefined = parent; s; s = suiteStack.pop()) {\n    yield s;\n\n    // Pushing in reverse allows us to maintain depth-first pre-order traversal;\n    // the same order is used by Mocha & Cypress.\n    for (let i = s.suites.length - 1; i >= 0; i--) {\n      suiteStack.push(s.suites[i]);\n    }\n  }\n};\n\nexport const iterateTests = function* (parent: CypressSuite) {\n  for (const suite of iterateSuites(parent)) {\n    yield* suite.tests;\n  }\n};\n\nexport const getSuitePath = (test: CypressTest) => {\n  const suites: CypressSuite[] = [];\n  for (let s: CypressSuite | undefined = test.parent; s; s = s.parent) {\n    suites.push(s);\n  }\n  suites.reverse();\n  return suites;\n};\n\nexport const getSuiteTitlePath = (test: CypressTest): string[] =>\n  getSuitePath(test)\n    .filter((s) => s.title)\n    .map((s) => s.title);\n\nexport const generateApiStepId = () => (getAllureState().nextApiStepId++).toString();\n\nexport const getTestMetadata = (test: CypressTest) => {\n  const rawName = test.title;\n  const { cleanTitle: name, labels, links } = extractMetadataFromString(rawName);\n  const suites = test.titlePath().slice(0, -1);\n  const fullNameSuffix = `${[...suites, name].join(\" \")}`;\n  return { name, labels, links, fullNameSuffix };\n};\n\nexport const isAllureHook = (hook: CypressHook) => hook.title.includes(ALLURE_REPORT_SYSTEM_HOOK);\n\nexport const isRootAfterAllHook = (hook: CypressHook) => hook.parent!.root && hook.hookName === \"after all\";\n\nexport const isLastRootAfterHook = (context: Mocha.Context) => {\n  const currentAfterAll = context.test as CypressHook;\n  const rootSuite = (context.test as CypressHook).parent!;\n  const hooks = (rootSuite as any).hooks as CypressHook[];\n  const lastAfterAll = hooks.findLast((h) => h.hookName === \"after all\");\n  return lastAfterAll?.hookId === currentAfterAll.hookId;\n};\n\nexport const getStatusDataOfTestSkippedByHookError = (\n  hookTitle: string,\n  isEachHook: boolean,\n  err: Error,\n  suite: CypressSuite,\n) => {\n  const status = isEachHook ? Status.SKIPPED : getStatusFromError(err);\n  const { message, trace } = getMessageAndTraceFromError(err);\n  return {\n    status,\n    statusDetails: {\n      message: isEachHook ? getSkipReason(hookTitle, suite) : message,\n      trace,\n    },\n  };\n};\n\nconst getSkipReason = (hookTitle: string, suite: CypressSuite) => {\n  const suiteName = suite.title ? `'${suite.title}'` : \"root\";\n  return `'${hookTitle}' defined in the ${suiteName} suite has failed`;\n};\n"],"mappings":"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","ignoreList":[]}