{"version":3,"file":"runtime.js","names":["_allureJsCommons","require","_sdk","_runtime","_state","_steps","_utils","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","_classPrivateMethodInitSpec","a","_checkPrivateRedeclaration","add","has","_assertClassBrand","n","initTestRuntime","setGlobalTestRuntime","AllureCypressTestRuntime","exports","getTestRuntime","getGlobalTestRuntime","_AllureCypressTestRuntime_brand","WeakSet","constructor","_resetMessages","labels","_len","Array","_key","_enqueueMessageAsync","type","data","links","_len2","_key2","parameter","name","options","parameters","description","markdown","descriptionHtml","html","displayName","historyId","testCaseId","attachment","content","attachmentRawContent","actualEncoding","attachmentContent","uint8ArrayToBase64","encoding","contentType","fileExtension","attachmentFromPath","path","logStep","status","undefined","Status","PASSED","error","cy","wrap","ALLURE_STEP_CMD_SUBJECT","log","then","startAllureApiStep","Cypress","Promise","resolve","stopCurrentAllureApiStep","getMessageAndTraceFromError","step","body","result","stepDisplayName","stepParameter","mode","flushAllureMessagesToTask","taskName","messages","_dequeueAllMessages","task","absolutePath","spec","absolute","flushAllureMessagesToTaskAsync","args","isInteractive","config","setRuntimeMessages","message","enqueueRuntimeMessage","getRuntimeMessages"],"sources":["../../../src/browser/runtime.ts"],"sourcesContent":["import { Status } from \"allure-js-commons\";\nimport type { AttachmentOptions, Label, Link, ParameterMode, ParameterOptions } from \"allure-js-commons\";\nimport { getMessageAndTraceFromError } from \"allure-js-commons/sdk\";\nimport { getGlobalTestRuntime, setGlobalTestRuntime } from \"allure-js-commons/sdk/runtime\";\nimport type { TestRuntime } from \"allure-js-commons/sdk/runtime\";\nimport type { AllureCypressTaskArgs, CypressMessage } from \"../types.js\";\nimport { enqueueRuntimeMessage, getRuntimeMessages, setRuntimeMessages } from \"./state.js\";\nimport { ALLURE_STEP_CMD_SUBJECT, startAllureApiStep, stopCurrentAllureApiStep } from \"./steps.js\";\nimport { uint8ArrayToBase64 } from \"./utils.js\";\n\nexport const initTestRuntime = () => setGlobalTestRuntime(new AllureCypressTestRuntime() as TestRuntime);\n\nexport const getTestRuntime = () => getGlobalTestRuntime() as AllureCypressTestRuntime;\n\nclass AllureCypressTestRuntime implements TestRuntime {\n  constructor() {\n    this.#resetMessages();\n  }\n\n  labels(...labels: Label[]) {\n    return this.#enqueueMessageAsync({\n      type: \"metadata\",\n      data: {\n        labels,\n      },\n    });\n  }\n\n  links(...links: Link[]) {\n    return this.#enqueueMessageAsync({\n      type: \"metadata\",\n      data: {\n        links,\n      },\n    });\n  }\n\n  parameter(name: string, value: string, options?: ParameterOptions) {\n    return this.#enqueueMessageAsync({\n      type: \"metadata\",\n      data: {\n        parameters: [\n          {\n            name,\n            value,\n            ...options,\n          },\n        ],\n      },\n    });\n  }\n\n  description(markdown: string) {\n    return this.#enqueueMessageAsync({\n      type: \"metadata\",\n      data: {\n        description: markdown,\n      },\n    });\n  }\n\n  descriptionHtml(html: string) {\n    return this.#enqueueMessageAsync({\n      type: \"metadata\",\n      data: {\n        descriptionHtml: html,\n      },\n    });\n  }\n\n  displayName(name: string) {\n    return this.#enqueueMessageAsync({\n      type: \"metadata\",\n      data: {\n        displayName: name,\n      },\n    });\n  }\n\n  historyId(value: string) {\n    return this.#enqueueMessageAsync({\n      type: \"metadata\",\n      data: {\n        historyId: value,\n      },\n    });\n  }\n\n  testCaseId(value: string) {\n    return this.#enqueueMessageAsync({\n      type: \"metadata\",\n      data: {\n        testCaseId: value,\n      },\n    });\n  }\n\n  // @ts-ignore\n  attachment(name: string, content: string, options: AttachmentOptions) {\n    // @ts-ignore\n    const attachmentRawContent: string | Uint8Array = content?.type === \"Buffer\" ? content.data : content;\n    const actualEncoding = typeof attachmentRawContent === \"string\" ? \"utf8\" : \"base64\";\n    const attachmentContent = uint8ArrayToBase64(attachmentRawContent);\n\n    return this.#enqueueMessageAsync({\n      type: \"attachment_content\",\n      data: {\n        name,\n        content: attachmentContent,\n        encoding: actualEncoding,\n        contentType: options.contentType,\n        fileExtension: options.fileExtension,\n      },\n    });\n  }\n\n  attachmentFromPath(name: string, path: string, options: Omit<AttachmentOptions, \"encoding\">) {\n    return this.#enqueueMessageAsync({\n      type: \"attachment_path\",\n      data: {\n        name,\n        path,\n        contentType: options.contentType,\n        fileExtension: options.fileExtension,\n      },\n    });\n  }\n\n  logStep(name: string, status: Status = Status.PASSED, error?: Error) {\n    return cy\n      .wrap(ALLURE_STEP_CMD_SUBJECT, { log: false })\n      .then(() => {\n        startAllureApiStep(name);\n        return Cypress.Promise.resolve();\n      })\n      .then(() => {\n        stopCurrentAllureApiStep(status, error ? getMessageAndTraceFromError(error) : undefined);\n        return Cypress.Promise.resolve();\n      });\n  }\n\n  step<T = void>(name: string, body: () => T | PromiseLike<T>) {\n    return cy\n      .wrap(ALLURE_STEP_CMD_SUBJECT, { log: false })\n      .then(() => {\n        startAllureApiStep(name);\n        return Cypress.Promise.resolve(body());\n      })\n      .then((result) => {\n        stopCurrentAllureApiStep();\n        return result;\n      });\n  }\n\n  stepDisplayName(name: string) {\n    return this.#enqueueMessageAsync({\n      type: \"step_metadata\",\n      data: {\n        name,\n      },\n    });\n  }\n\n  stepParameter(name: string, value: string, mode?: ParameterMode) {\n    return this.#enqueueMessageAsync({\n      type: \"step_metadata\",\n      data: {\n        parameters: [{ name, value, mode }],\n      },\n    });\n  }\n\n  flushAllureMessagesToTask(taskName: string) {\n    const messages = this.#dequeueAllMessages();\n    if (messages.length) {\n      cy.task(taskName, { absolutePath: Cypress.spec.absolute, messages }, { log: false });\n    }\n  }\n\n  flushAllureMessagesToTaskAsync(taskName: string): Cypress.Chainable<unknown> | undefined {\n    const messages = this.#dequeueAllMessages();\n    if (messages.length) {\n      const args: AllureCypressTaskArgs = {\n        absolutePath: Cypress.spec.absolute,\n        messages,\n        isInteractive: Cypress.config(\"isInteractive\"),\n      };\n      return cy.task(taskName, args, { log: false });\n    }\n  }\n\n  #resetMessages() {\n    setRuntimeMessages([]);\n  }\n\n  #enqueueMessageAsync(message: CypressMessage): PromiseLike<void> {\n    enqueueRuntimeMessage(message);\n    return Cypress.Promise.resolve();\n  }\n\n  #dequeueAllMessages() {\n    const messages = getRuntimeMessages();\n    this.#resetMessages();\n    return messages;\n  }\n}\n"],"mappings":"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","ignoreList":[]}