{"version":3,"file":"ReporterRuntime.js","names":["_path","require","_model","_LifecycleState","_Notifier","_factory","_testplan","_utils","_attachments","_loader","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classPrivateMethodInitSpec","a","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","set","has","TypeError","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","String","Number","_classPrivateGetter","s","_assertClassBrand","_classPrivateFieldGet","get","n","_runningSteps","WeakMap","_ShallowStepsStack_brand","WeakSet","ShallowStepsStack","constructor","startStep","step","stepResult","createStepResult","_get_currentStep","steps","updateStep","updateFunc","console","error","stopStep","opts","stop","duration","result","start","undefined","pop","exports","_this","DefaultStepStack","Map","stepsByRoot","clear","rootsByStep","rootUuid","maybeValue","delete","stepUuid","removeStep","newValue","_handleMetadataMessage","_handleStepMetadataMessage","_handleStartStepMessage","_handleStopStepMessage","_handleAttachmentContentMessage","_handleAttachmentPathMessage","_findParent","_writeFixturesOfScope","_writeContainer","_calculateTimings","ReporterRuntime","_ref","_this2","writer","listeners","environmentInfo","categories","links","globalLabels","LifecycleState","uuid","randomUuid","state","setScope","scope","getScope","concat","deleteScope","scopeUuid","type","fixtureResult","wrappedFixture","setFixtureResult","createFixtureResult","Date","now","fixtures","fixture","getFixtureResult","startStop","stage","Stage","FINISHED","scopeUuids","testResult","createTestResult","deepClone","notifier","beforeTestResultStart","tests","setTestResult","afterTestResultStart","getTestResult","beforeTestResultUpdate","afterTestResultUpdate","_testResult$testCaseI","_testResult$historyId","wrapped","getWrappedTestResult","beforeTestResultStop","labels","parameters","description","_testResult$descripti","descriptionHtml","_testResult$descripti2","testCaseId","getTestResultTestCaseId","historyId","getTestResultHistoryId","afterTestResultStop","hasSkipLabel","deleteTestResult","beforeTestResultWrite","writeResult","afterTestResultWrite","stepStack","currentStep","parentStepUuid","parent","JSON","stringify","setStepResult","addStep","getStepResult","beforeStepStop","afterStepStop","attachmentName","attachmentContentOrPath","options","_options$fileExtensio","isPath","fileExtension","extname","attachmentFileName","buildAttachmentFileName","contentType","writeAttachmentFromPath","writeAttachment","attachment","name","source","wrapInStep","timestamp","attachments","writeEnvironmentInfo","serializedCategories","map","c","messageRegex","RegExp","traceRegex","writeCategoriesDefinitions","messages","message","data","getWrappedFixtureResult","displayName","updateFixture","updateScope","linkConfig","formatLinks","updateTest","status","statusDetails","Buffer","from","content","encoding","path","root","getExecutionItem","_ref2","writtenFixtures","Set","deleteFixtureResult","befores","afters","writeGroup","children","normalisedDuration","Math","max","round","resolveWriter","Notifier","Array","isArray","entries","flatMap","_ref3","v"],"sources":["../../../../src/sdk/reporter/ReporterRuntime.ts"],"sourcesContent":["/* eslint max-lines: 0 */\nimport { extname } from \"path\";\nimport {\n  type Attachment,\n  type AttachmentOptions,\n  type FixtureResult,\n  type Label,\n  Stage,\n  type StepResult,\n  type TestResult,\n} from \"../../model.js\";\nimport type {\n  Category,\n  EnvironmentInfo,\n  RuntimeAttachmentContentMessage,\n  RuntimeAttachmentPathMessage,\n  RuntimeMessage,\n  RuntimeMetadataMessage,\n  RuntimeStartStepMessage,\n  RuntimeStepMetadataMessage,\n  RuntimeStopStepMessage,\n} from \"../types.js\";\nimport { LifecycleState } from \"./LifecycleState.js\";\nimport { Notifier } from \"./Notifier.js\";\nimport { createFixtureResult, createStepResult, createTestResult } from \"./factory.js\";\nimport { hasSkipLabel } from \"./testplan.js\";\nimport type {\n  FixtureResultWrapper,\n  FixtureType,\n  LinkConfig,\n  ReporterRuntimeConfig,\n  TestScope,\n  Writer,\n} from \"./types.js\";\nimport { deepClone, formatLinks, getTestResultHistoryId, getTestResultTestCaseId, randomUuid } from \"./utils.js\";\nimport { buildAttachmentFileName } from \"./utils/attachments.js\";\nimport { resolveWriter } from \"./writer/loader.js\";\n\nexport interface StepStack {\n  clear(): void;\n\n  removeRoot(rootUuid: string): void;\n\n  currentStep(rootUuid: string): string | undefined;\n\n  addStep(rootUuid: string, stepUuid: string): void;\n\n  removeStep(stepUuid: string): void;\n}\n\n/**\n * Simpler steps stack implementation that contains only the current steps without root nodes\n * Useful, when you need to create steps without binding them to a specific test or fixture\n * @example\n * ```js\n * const stack = new ShallowStepsStack();\n *\n * stack.startStep({ name: \"step 1\" });\n * stack.startStep({ name: \"step 1.1\" });\n * stack.stopStep({ status: Status.FAILED });\n * stack.stopStep({ status: Status.PASSED });\n * stack.steps // => [{ name: \"step 1\", status: Status.PASSED, steps: [{ name: \"step 1.1\", status: Status.FAILED }] }]\n * ```\n */\nexport class ShallowStepsStack {\n  steps: StepResult[] = [];\n\n  #runningSteps: StepResult[] = [];\n\n  get #currentStep() {\n    return this.#runningSteps[this.#runningSteps.length - 1];\n  }\n\n  startStep(step: Partial<StepResult>) {\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      ...step,\n    };\n\n    if (this.#currentStep) {\n      this.#currentStep.steps.push(stepResult);\n    } else {\n      this.steps.push(stepResult);\n    }\n\n    this.#runningSteps.push(stepResult);\n  }\n\n  updateStep(updateFunc: (result: StepResult) => void) {\n    if (!this.#currentStep) {\n      // eslint-disable-next-line no-console\n      console.error(\"There is no running step in the stack to update!\");\n      return;\n    }\n\n    updateFunc(this.#currentStep);\n  }\n\n  stopStep(opts?: { stop?: number; duration?: number }) {\n    if (!this.#currentStep) {\n      // eslint-disable-next-line no-console\n      console.error(\"There is no running step in the stack to stop!\");\n      return;\n    }\n\n    const { stop, duration = 0 } = opts ?? {};\n\n    this.updateStep((result) => {\n      result.stop = stop ?? result.start ? result.start! + duration : undefined;\n    });\n\n    this.#runningSteps.pop();\n  }\n}\n\nexport class DefaultStepStack implements StepStack {\n  private stepsByRoot: Map<string, string[]> = new Map();\n  private rootsByStep: Map<string, string> = new Map();\n\n  clear = (): void => {\n    this.stepsByRoot.clear();\n    this.rootsByStep.clear();\n  };\n\n  removeRoot = (rootUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    this.stepsByRoot.delete(rootUuid);\n    if (maybeValue) {\n      maybeValue.forEach((stepUuid) => this.rootsByStep.delete(stepUuid));\n    }\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    return maybeValue[maybeValue.length - 1];\n  };\n\n  addStep = (rootUuid: string, stepUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      this.stepsByRoot.set(rootUuid, [stepUuid]);\n    } else {\n      maybeValue.push(stepUuid);\n    }\n    this.rootsByStep.set(stepUuid, rootUuid);\n  };\n\n  removeStep(stepUuid: string) {\n    const rootUuid = this.rootsByStep.get(stepUuid);\n    if (!rootUuid) {\n      return;\n    }\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    const newValue = maybeValue.filter((value) => value !== stepUuid);\n    this.stepsByRoot.set(rootUuid, newValue);\n  }\n}\n\nexport class ReporterRuntime {\n  private readonly state = new LifecycleState();\n  private notifier: Notifier;\n  private stepStack: StepStack = new DefaultStepStack();\n  writer: Writer;\n  categories?: Category[];\n  environmentInfo?: EnvironmentInfo;\n  linkConfig?: LinkConfig;\n  globalLabels: Label[] = [];\n\n  constructor({\n    writer,\n    listeners = [],\n    environmentInfo,\n    categories,\n    links,\n    globalLabels = {},\n  }: ReporterRuntimeConfig) {\n    this.writer = resolveWriter(writer);\n    this.notifier = new Notifier({ listeners });\n    this.categories = categories;\n    this.environmentInfo = environmentInfo;\n    this.linkConfig = links;\n\n    if (Array.isArray(globalLabels)) {\n      this.globalLabels = globalLabels;\n    } else if (Object.keys(globalLabels).length) {\n      this.globalLabels = Object.entries(globalLabels).flatMap(([name, value]) => {\n        if (Array.isArray(value)) {\n          return value.map((v) => ({ name, value: v }));\n        }\n\n        return {\n          name,\n          value,\n        };\n      });\n    }\n  }\n\n  startScope = (): string => {\n    const uuid = randomUuid();\n    this.state.setScope(uuid);\n    return uuid;\n  };\n\n  updateScope = (uuid: string, updateFunc: (scope: TestScope) => void): void => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not update scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(scope);\n  };\n\n  writeScope = (uuid: string) => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not write scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.#writeFixturesOfScope(scope);\n    this.state.deleteScope(scope.uuid);\n  };\n\n  startFixture = (scopeUuid: string, type: FixtureType, fixtureResult: Partial<FixtureResult>): string | undefined => {\n    const scope = this.state.getScope(scopeUuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not start fixture: no scope with uuid ${scopeUuid} is found`);\n      return;\n    }\n\n    const uuid = randomUuid();\n    const wrappedFixture = this.state.setFixtureResult(scopeUuid, uuid, type, {\n      ...createFixtureResult(),\n      start: Date.now(),\n      ...fixtureResult,\n    });\n\n    scope.fixtures.push(wrappedFixture);\n    return uuid;\n  };\n\n  updateFixture = (uuid: string, updateFunc: (result: FixtureResult) => void): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(fixture);\n  };\n\n  stopFixture = (uuid: string, opts?: { stop?: number; duration?: number }): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    const startStop = this.#calculateTimings(fixture.start, opts?.stop, opts?.duration);\n    fixture.start = startStop.start;\n    fixture.stop = startStop.stop;\n\n    fixture.stage = Stage.FINISHED;\n  };\n\n  startTest = (result: Partial<TestResult>, scopeUuids: string[] = []): string => {\n    const uuid = randomUuid();\n    const testResult: TestResult = {\n      ...createTestResult(uuid),\n      start: Date.now(),\n      ...deepClone(result),\n    };\n\n    this.notifier.beforeTestResultStart(testResult);\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n      if (!scope) {\n        // eslint-disable-next-line no-console\n        console.error(`count not link test to the scope: no scope with uuid ${uuid} is found`);\n        return;\n      }\n      scope.tests.push(uuid);\n    });\n\n    this.state.setTestResult(uuid, testResult, scopeUuids);\n    this.notifier.afterTestResultStart(testResult);\n    return uuid;\n  };\n\n  updateTest = (uuid: string, updateFunc: (result: TestResult) => void): void => {\n    const testResult = this.state.getTestResult(uuid);\n\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    this.notifier.beforeTestResultUpdate(testResult);\n    updateFunc(testResult);\n    this.notifier.afterTestResultUpdate(testResult);\n  };\n\n  stopTest = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const wrapped = this.state.getWrappedTestResult(uuid);\n    if (!wrapped) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    const testResult = wrapped.value;\n\n    this.notifier.beforeTestResultStop(testResult);\n\n    const scopeUuids = wrapped.scopeUuids;\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n\n      if (scope?.labels) {\n        testResult.labels = [...testResult.labels, ...scope.labels];\n      }\n\n      if (scope?.links) {\n        testResult.links = [...testResult.links, ...scope.links];\n      }\n\n      if (scope?.parameters) {\n        testResult.parameters = [...testResult.parameters, ...scope.parameters];\n      }\n\n      if (scope?.description) {\n        testResult.description = testResult.description ?? scope.description;\n      }\n\n      if (scope?.descriptionHtml) {\n        testResult.descriptionHtml = testResult.descriptionHtml ?? scope.descriptionHtml;\n      }\n    });\n\n    testResult.labels = [...this.globalLabels, ...testResult.labels];\n\n    testResult.testCaseId ??= getTestResultTestCaseId(testResult);\n    testResult.historyId ??= getTestResultHistoryId(testResult);\n\n    const startStop = this.#calculateTimings(testResult.start, opts?.stop, opts?.duration);\n\n    testResult.start = startStop.start;\n    testResult.stop = startStop.stop;\n\n    this.notifier.afterTestResultStop(testResult);\n  };\n\n  writeTest = (uuid: string) => {\n    const testResult = this.state.getTestResult(uuid);\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not write test result: no test with uuid ${uuid} is found`);\n      return;\n    }\n\n    if (hasSkipLabel(testResult.labels)) {\n      this.state.deleteTestResult(uuid);\n      return;\n    }\n\n    this.notifier.beforeTestResultWrite(testResult);\n\n    this.writer.writeResult(testResult);\n    this.state.deleteTestResult(uuid);\n\n    this.notifier.afterTestResultWrite(testResult);\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    return this.stepStack.currentStep(rootUuid);\n  };\n\n  startStep = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    result: Partial<StepResult>,\n  ): string | undefined => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not start test step: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      start: Date.now(),\n      ...result,\n    };\n    parent.steps.push(stepResult);\n    const stepUuid = randomUuid();\n    this.state.setStepResult(stepUuid, stepResult);\n\n    this.stepStack.addStep(rootUuid, stepUuid);\n\n    return stepUuid;\n  };\n\n  updateStep = (uuid: string, updateFunc: (stepResult: StepResult) => void) => {\n    const step = this.state.getStepResult(uuid)!;\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(step);\n  };\n\n  stopStep = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const step = this.state.getStepResult(uuid);\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.notifier.beforeStepStop(step);\n\n    const startStop = this.#calculateTimings(step.start, opts?.stop, opts?.duration);\n    step.start = startStop.start;\n    step.stop = startStop.stop;\n\n    step.stage = Stage.FINISHED;\n\n    this.stepStack.removeStep(uuid);\n\n    this.notifier.afterStepStop(step);\n  };\n\n  writeAttachment = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    attachmentName: string,\n    attachmentContentOrPath: Buffer | string,\n    options: AttachmentOptions & { wrapInStep?: boolean; timestamp?: number },\n  ) => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not write test attachment: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n\n    const isPath = typeof attachmentContentOrPath === \"string\";\n    const fileExtension = options.fileExtension ?? (isPath ? extname(attachmentContentOrPath) : undefined);\n    const attachmentFileName = buildAttachmentFileName({\n      contentType: options.contentType,\n      fileExtension,\n    });\n\n    if (isPath) {\n      this.writer.writeAttachmentFromPath(attachmentFileName, attachmentContentOrPath);\n    } else {\n      this.writer.writeAttachment(attachmentFileName, attachmentContentOrPath);\n    }\n\n    const attachment: Attachment = {\n      name: attachmentName,\n      source: attachmentFileName,\n      type: options.contentType,\n    };\n\n    if (options.wrapInStep) {\n      const { timestamp = Date.now() } = options;\n      parent.steps.push({\n        name: attachmentName,\n        attachments: [attachment],\n        start: timestamp,\n        stop: timestamp,\n      } as StepResult);\n    } else {\n      parent.attachments.push(attachment);\n    }\n  };\n\n  writeEnvironmentInfo = () => {\n    if (!this.environmentInfo) {\n      return;\n    }\n\n    this.writer.writeEnvironmentInfo(this.environmentInfo);\n  };\n\n  writeCategoriesDefinitions = () => {\n    if (!this.categories) {\n      return;\n    }\n\n    const serializedCategories = this.categories.map((c) => {\n      if (c.messageRegex instanceof RegExp) {\n        c.messageRegex = c.messageRegex.source;\n      }\n\n      if (c.traceRegex instanceof RegExp) {\n        c.traceRegex = c.traceRegex.source;\n      }\n\n      return c;\n    });\n\n    this.writer.writeCategoriesDefinitions(serializedCategories);\n  };\n\n  applyRuntimeMessages = (rootUuid: string, messages: RuntimeMessage[]) => {\n    messages.forEach((message) => {\n      switch (message.type) {\n        case \"metadata\":\n          this.#handleMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_metadata\":\n          this.#handleStepMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_start\":\n          this.#handleStartStepMessage(rootUuid, message.data);\n          return;\n        case \"step_stop\":\n          this.#handleStopStepMessage(rootUuid, message.data);\n          return;\n        case \"attachment_content\":\n          this.#handleAttachmentContentMessage(rootUuid, message.data);\n          return;\n        case \"attachment_path\":\n          this.#handleAttachmentPathMessage(rootUuid, message.data);\n          return;\n        default:\n          // eslint-disable-next-line no-console\n          console.error(`could not apply runtime messages: unknown message ${JSON.stringify(message)}`);\n          return;\n      }\n    });\n  };\n\n  #handleMetadataMessage = (rootUuid: string, message: RuntimeMetadataMessage[\"data\"]) => {\n    // only display name could be set to fixture.\n    const fixtureResult = this.state.getWrappedFixtureResult(rootUuid);\n    const { links, labels, parameters, displayName, testCaseId, historyId, description, descriptionHtml } = message;\n\n    if (fixtureResult) {\n      if (displayName) {\n        this.updateFixture(rootUuid, (result) => {\n          result.name = displayName;\n        });\n      }\n\n      if (historyId) {\n        // eslint-disable-next-line no-console\n        console.error(\"historyId can't be changed within test fixtures\");\n      }\n      if (testCaseId) {\n        // eslint-disable-next-line no-console\n        console.error(\"testCaseId can't be changed within test fixtures\");\n      }\n\n      if (links || labels || parameters || description || descriptionHtml) {\n        // in some frameworks, afterEach methods can be executed before test stop event, while\n        // in others after. To remove the possible undetermined behaviour we only allow\n        // using runtime metadata API in before hooks.\n        if (fixtureResult.type === \"after\") {\n          // eslint-disable-next-line no-console\n          console.error(\"metadata messages isn't supported for after test fixtures\");\n          return;\n        }\n\n        this.updateScope(fixtureResult.scopeUuid, (scope) => {\n          if (links) {\n            scope.links = [...scope.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n          }\n          if (labels) {\n            scope.labels = [...scope.labels, ...labels];\n          }\n          if (parameters) {\n            scope.parameters = [...scope.parameters, ...parameters];\n          }\n          if (description) {\n            scope.description = description;\n          }\n          if (descriptionHtml) {\n            scope.descriptionHtml = descriptionHtml;\n          }\n        });\n      }\n\n      return;\n    }\n\n    this.updateTest(rootUuid, (result) => {\n      if (links) {\n        result.links = [...result.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n      }\n      if (labels) {\n        result.labels = [...result.labels, ...labels];\n      }\n      if (parameters) {\n        result.parameters = [...result.parameters, ...parameters];\n      }\n      if (displayName) {\n        result.name = displayName;\n      }\n      if (testCaseId) {\n        result.testCaseId = testCaseId;\n      }\n      if (historyId) {\n        result.historyId = historyId;\n      }\n      if (description) {\n        result.description = description;\n      }\n      if (descriptionHtml) {\n        result.descriptionHtml = descriptionHtml;\n      }\n    });\n  };\n\n  #handleStepMetadataMessage = (rootUuid: string, message: RuntimeStepMetadataMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step metadata message: no step is running\");\n      return;\n    }\n    const { name, parameters } = message;\n    this.updateStep(stepUuid, (stepResult) => {\n      if (name) {\n        stepResult.name = name;\n      }\n      if (parameters) {\n        stepResult.parameters = [...stepResult.parameters, ...parameters];\n      }\n    });\n  };\n\n  #handleStartStepMessage = (rootUuid: string, message: RuntimeStartStepMessage[\"data\"]) => {\n    this.startStep(rootUuid, undefined, { ...message });\n  };\n\n  #handleStopStepMessage = (rootUuid: string, message: RuntimeStopStepMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step stop message: no step is running\");\n      return;\n    }\n    this.updateStep(stepUuid, (result) => {\n      if (message.status && !result.status) {\n        result.status = message.status;\n      }\n      if (message.statusDetails) {\n        result.statusDetails = { ...result.statusDetails, ...message.statusDetails };\n      }\n    });\n    this.stopStep(stepUuid, { stop: message.stop });\n  };\n\n  #handleAttachmentContentMessage = (rootUuid: string, message: RuntimeAttachmentContentMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, Buffer.from(message.content, message.encoding), {\n      encoding: message.encoding,\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #handleAttachmentPathMessage = (rootUuid: string, message: RuntimeAttachmentPathMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, message.path, {\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #findParent = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n  ): FixtureResult | TestResult | StepResult | undefined => {\n    const root = this.state.getExecutionItem(rootUuid);\n    if (!root) {\n      return;\n    }\n\n    if (parentStepUuid === null) {\n      return root;\n    } else if (parentStepUuid === undefined) {\n      const stepUuid = this.currentStep(rootUuid);\n      return stepUuid ? this.state.getStepResult(stepUuid) : root;\n    } else {\n      return this.state.getStepResult(parentStepUuid);\n    }\n  };\n\n  #writeFixturesOfScope = ({ fixtures, tests }: TestScope) => {\n    const writtenFixtures = new Set<string>();\n    if (tests.length) {\n      for (const wrappedFixture of fixtures) {\n        if (!writtenFixtures.has(wrappedFixture.uuid)) {\n          this.#writeContainer(tests, wrappedFixture);\n          this.state.deleteFixtureResult(wrappedFixture.uuid);\n          writtenFixtures.add(wrappedFixture.uuid);\n        }\n      }\n    }\n  };\n\n  #writeContainer = (tests: string[], wrappedFixture: FixtureResultWrapper) => {\n    const fixture = wrappedFixture.value;\n    const befores = wrappedFixture.type === \"before\" ? [wrappedFixture.value] : [];\n    const afters = wrappedFixture.type === \"after\" ? [wrappedFixture.value] : [];\n    this.writer.writeGroup({\n      uuid: wrappedFixture.uuid,\n      name: fixture.name,\n      children: [...new Set(tests)],\n      befores,\n      afters,\n    });\n  };\n\n  #calculateTimings = (\n    start?: number,\n    stop?: number,\n    duration?: number,\n  ): {\n    start?: number;\n    stop?: number;\n  } => {\n    const result: { start?: number; stop?: number } = { start, stop };\n    if (duration) {\n      const normalisedDuration = Math.max(0, duration);\n      if (result.stop !== undefined) {\n        result.start = result.stop - normalisedDuration;\n      } else if (result.start !== undefined) {\n        result.stop = result.start + normalisedDuration;\n      } else {\n        result.stop = Date.now();\n        result.start = result.stop - normalisedDuration;\n      }\n    } else {\n      if (result.stop === undefined) {\n        result.stop = Date.now();\n      }\n      if (result.start === undefined) {\n        result.start = result.stop;\n      }\n    }\n    return {\n      start: result.start ? Math.round(result.start) : undefined,\n      stop: result.stop ? Math.round(result.stop) : undefined,\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]}