{"version":3,"file":"ReporterRuntime.js","names":["extname","Stage","LifecycleState","Notifier","createFixtureResult","createStepResult","createTestResult","hasSkipLabel","deepClone","formatLinks","getTestResultHistoryId","getTestResultTestCaseId","randomUuid","buildAttachmentFileName","resolveWriter","_runningSteps","WeakMap","_ShallowStepsStack_brand","WeakSet","ShallowStepsStack","constructor","_classPrivateMethodInitSpec","_defineProperty","_classPrivateFieldInitSpec","startStep","step","stepResult","_objectSpread","_classPrivateGetter","_get_currentStep","steps","push","_classPrivateFieldGet","updateStep","updateFunc","console","error","stopStep","opts","stop","duration","result","start","undefined","pop","_this","length","DefaultStepStack","Map","stepsByRoot","clear","rootsByStep","rootUuid","maybeValue","get","delete","forEach","stepUuid","set","removeStep","newValue","filter","value","_handleMetadataMessage","_handleStepMetadataMessage","_handleStartStepMessage","_handleStopStepMessage","_handleAttachmentContentMessage","_handleAttachmentPathMessage","_findParent","_writeFixturesOfScope","_writeContainer","_calculateTimings","ReporterRuntime","_ref","_this2","writer","listeners","environmentInfo","categories","links","globalLabels","uuid","state","setScope","scope","getScope","concat","call","deleteScope","scopeUuid","type","fixtureResult","wrappedFixture","setFixtureResult","Date","now","fixtures","fixture","getFixtureResult","startStop","stage","FINISHED","scopeUuids","arguments","testResult","notifier","beforeTestResultStart","tests","setTestResult","afterTestResultStart","getTestResult","beforeTestResultUpdate","afterTestResultUpdate","_testResult$testCaseI","_testResult$historyId","wrapped","getWrappedTestResult","beforeTestResultStop","labels","parameters","description","_testResult$descripti","descriptionHtml","_testResult$descripti2","testCaseId","historyId","afterTestResultStop","deleteTestResult","beforeTestResultWrite","writeResult","afterTestResultWrite","stepStack","currentStep","parentStepUuid","parent","JSON","stringify","setStepResult","addStep","getStepResult","beforeStepStop","afterStepStop","attachmentName","attachmentContentOrPath","options","_options$fileExtensio","isPath","fileExtension","attachmentFileName","contentType","writeAttachmentFromPath","writeAttachment","attachment","name","source","wrapInStep","timestamp","attachments","writeEnvironmentInfo","serializedCategories","map","c","messageRegex","RegExp","traceRegex","writeCategoriesDefinitions","messages","message","data","getWrappedFixtureResult","displayName","updateFixture","updateScope","linkConfig","updateTest","status","statusDetails","Buffer","from","content","encoding","path","root","getExecutionItem","_ref2","writtenFixtures","Set","has","deleteFixtureResult","add","befores","afters","writeGroup","children","normalisedDuration","Math","max","round","Array","isArray","Object","keys","entries","flatMap","_ref3","v"],"sources":["../../../../src/sdk/reporter/ReporterRuntime.ts"],"sourcesContent":["/* eslint max-lines: 0 */\nimport { extname } from \"path\";\nimport {\n  type Attachment,\n  type AttachmentOptions,\n  type FixtureResult,\n  type Label,\n  Stage,\n  type StepResult,\n  type TestResult,\n} from \"../../model.js\";\nimport type {\n  Category,\n  EnvironmentInfo,\n  RuntimeAttachmentContentMessage,\n  RuntimeAttachmentPathMessage,\n  RuntimeMessage,\n  RuntimeMetadataMessage,\n  RuntimeStartStepMessage,\n  RuntimeStepMetadataMessage,\n  RuntimeStopStepMessage,\n} from \"../types.js\";\nimport { LifecycleState } from \"./LifecycleState.js\";\nimport { Notifier } from \"./Notifier.js\";\nimport { createFixtureResult, createStepResult, createTestResult } from \"./factory.js\";\nimport { hasSkipLabel } from \"./testplan.js\";\nimport type {\n  FixtureResultWrapper,\n  FixtureType,\n  LinkConfig,\n  ReporterRuntimeConfig,\n  TestScope,\n  Writer,\n} from \"./types.js\";\nimport { deepClone, formatLinks, getTestResultHistoryId, getTestResultTestCaseId, randomUuid } from \"./utils.js\";\nimport { buildAttachmentFileName } from \"./utils/attachments.js\";\nimport { resolveWriter } from \"./writer/loader.js\";\n\nexport interface StepStack {\n  clear(): void;\n\n  removeRoot(rootUuid: string): void;\n\n  currentStep(rootUuid: string): string | undefined;\n\n  addStep(rootUuid: string, stepUuid: string): void;\n\n  removeStep(stepUuid: string): void;\n}\n\n/**\n * Simpler steps stack implementation that contains only the current steps without root nodes\n * Useful, when you need to create steps without binding them to a specific test or fixture\n * @example\n * ```js\n * const stack = new ShallowStepsStack();\n *\n * stack.startStep({ name: \"step 1\" });\n * stack.startStep({ name: \"step 1.1\" });\n * stack.stopStep({ status: Status.FAILED });\n * stack.stopStep({ status: Status.PASSED });\n * stack.steps // => [{ name: \"step 1\", status: Status.PASSED, steps: [{ name: \"step 1.1\", status: Status.FAILED }] }]\n * ```\n */\nexport class ShallowStepsStack {\n  steps: StepResult[] = [];\n\n  #runningSteps: StepResult[] = [];\n\n  get #currentStep() {\n    return this.#runningSteps[this.#runningSteps.length - 1];\n  }\n\n  startStep(step: Partial<StepResult>) {\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      ...step,\n    };\n\n    if (this.#currentStep) {\n      this.#currentStep.steps.push(stepResult);\n    } else {\n      this.steps.push(stepResult);\n    }\n\n    this.#runningSteps.push(stepResult);\n  }\n\n  updateStep(updateFunc: (result: StepResult) => void) {\n    if (!this.#currentStep) {\n      // eslint-disable-next-line no-console\n      console.error(\"There is no running step in the stack to update!\");\n      return;\n    }\n\n    updateFunc(this.#currentStep);\n  }\n\n  stopStep(opts?: { stop?: number; duration?: number }) {\n    if (!this.#currentStep) {\n      // eslint-disable-next-line no-console\n      console.error(\"There is no running step in the stack to stop!\");\n      return;\n    }\n\n    const { stop, duration = 0 } = opts ?? {};\n\n    this.updateStep((result) => {\n      result.stop = stop ?? result.start ? result.start! + duration : undefined;\n    });\n\n    this.#runningSteps.pop();\n  }\n}\n\nexport class DefaultStepStack implements StepStack {\n  private stepsByRoot: Map<string, string[]> = new Map();\n  private rootsByStep: Map<string, string> = new Map();\n\n  clear = (): void => {\n    this.stepsByRoot.clear();\n    this.rootsByStep.clear();\n  };\n\n  removeRoot = (rootUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    this.stepsByRoot.delete(rootUuid);\n    if (maybeValue) {\n      maybeValue.forEach((stepUuid) => this.rootsByStep.delete(stepUuid));\n    }\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    return maybeValue[maybeValue.length - 1];\n  };\n\n  addStep = (rootUuid: string, stepUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      this.stepsByRoot.set(rootUuid, [stepUuid]);\n    } else {\n      maybeValue.push(stepUuid);\n    }\n    this.rootsByStep.set(stepUuid, rootUuid);\n  };\n\n  removeStep(stepUuid: string) {\n    const rootUuid = this.rootsByStep.get(stepUuid);\n    if (!rootUuid) {\n      return;\n    }\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    const newValue = maybeValue.filter((value) => value !== stepUuid);\n    this.stepsByRoot.set(rootUuid, newValue);\n  }\n}\n\nexport class ReporterRuntime {\n  private readonly state = new LifecycleState();\n  private notifier: Notifier;\n  private stepStack: StepStack = new DefaultStepStack();\n  writer: Writer;\n  categories?: Category[];\n  environmentInfo?: EnvironmentInfo;\n  linkConfig?: LinkConfig;\n  globalLabels: Label[] = [];\n\n  constructor({\n    writer,\n    listeners = [],\n    environmentInfo,\n    categories,\n    links,\n    globalLabels = {},\n  }: ReporterRuntimeConfig) {\n    this.writer = resolveWriter(writer);\n    this.notifier = new Notifier({ listeners });\n    this.categories = categories;\n    this.environmentInfo = environmentInfo;\n    this.linkConfig = links;\n\n    if (Array.isArray(globalLabels)) {\n      this.globalLabels = globalLabels;\n    } else if (Object.keys(globalLabels).length) {\n      this.globalLabels = Object.entries(globalLabels).flatMap(([name, value]) => {\n        if (Array.isArray(value)) {\n          return value.map((v) => ({ name, value: v }));\n        }\n\n        return {\n          name,\n          value,\n        };\n      });\n    }\n  }\n\n  startScope = (): string => {\n    const uuid = randomUuid();\n    this.state.setScope(uuid);\n    return uuid;\n  };\n\n  updateScope = (uuid: string, updateFunc: (scope: TestScope) => void): void => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not update scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(scope);\n  };\n\n  writeScope = (uuid: string) => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not write scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.#writeFixturesOfScope(scope);\n    this.state.deleteScope(scope.uuid);\n  };\n\n  startFixture = (scopeUuid: string, type: FixtureType, fixtureResult: Partial<FixtureResult>): string | undefined => {\n    const scope = this.state.getScope(scopeUuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not start fixture: no scope with uuid ${scopeUuid} is found`);\n      return;\n    }\n\n    const uuid = randomUuid();\n    const wrappedFixture = this.state.setFixtureResult(scopeUuid, uuid, type, {\n      ...createFixtureResult(),\n      start: Date.now(),\n      ...fixtureResult,\n    });\n\n    scope.fixtures.push(wrappedFixture);\n    return uuid;\n  };\n\n  updateFixture = (uuid: string, updateFunc: (result: FixtureResult) => void): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(fixture);\n  };\n\n  stopFixture = (uuid: string, opts?: { stop?: number; duration?: number }): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    const startStop = this.#calculateTimings(fixture.start, opts?.stop, opts?.duration);\n    fixture.start = startStop.start;\n    fixture.stop = startStop.stop;\n\n    fixture.stage = Stage.FINISHED;\n  };\n\n  startTest = (result: Partial<TestResult>, scopeUuids: string[] = []): string => {\n    const uuid = randomUuid();\n    const testResult: TestResult = {\n      ...createTestResult(uuid),\n      start: Date.now(),\n      ...deepClone(result),\n    };\n\n    this.notifier.beforeTestResultStart(testResult);\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n      if (!scope) {\n        // eslint-disable-next-line no-console\n        console.error(`count not link test to the scope: no scope with uuid ${uuid} is found`);\n        return;\n      }\n      scope.tests.push(uuid);\n    });\n\n    this.state.setTestResult(uuid, testResult, scopeUuids);\n    this.notifier.afterTestResultStart(testResult);\n    return uuid;\n  };\n\n  updateTest = (uuid: string, updateFunc: (result: TestResult) => void): void => {\n    const testResult = this.state.getTestResult(uuid);\n\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    this.notifier.beforeTestResultUpdate(testResult);\n    updateFunc(testResult);\n    this.notifier.afterTestResultUpdate(testResult);\n  };\n\n  stopTest = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const wrapped = this.state.getWrappedTestResult(uuid);\n    if (!wrapped) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    const testResult = wrapped.value;\n\n    this.notifier.beforeTestResultStop(testResult);\n\n    const scopeUuids = wrapped.scopeUuids;\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n\n      if (scope?.labels) {\n        testResult.labels = [...testResult.labels, ...scope.labels];\n      }\n\n      if (scope?.links) {\n        testResult.links = [...testResult.links, ...scope.links];\n      }\n\n      if (scope?.parameters) {\n        testResult.parameters = [...testResult.parameters, ...scope.parameters];\n      }\n\n      if (scope?.description) {\n        testResult.description = testResult.description ?? scope.description;\n      }\n\n      if (scope?.descriptionHtml) {\n        testResult.descriptionHtml = testResult.descriptionHtml ?? scope.descriptionHtml;\n      }\n    });\n\n    testResult.labels = [...this.globalLabels, ...testResult.labels];\n\n    testResult.testCaseId ??= getTestResultTestCaseId(testResult);\n    testResult.historyId ??= getTestResultHistoryId(testResult);\n\n    const startStop = this.#calculateTimings(testResult.start, opts?.stop, opts?.duration);\n\n    testResult.start = startStop.start;\n    testResult.stop = startStop.stop;\n\n    this.notifier.afterTestResultStop(testResult);\n  };\n\n  writeTest = (uuid: string) => {\n    const testResult = this.state.getTestResult(uuid);\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not write test result: no test with uuid ${uuid} is found`);\n      return;\n    }\n\n    if (hasSkipLabel(testResult.labels)) {\n      this.state.deleteTestResult(uuid);\n      return;\n    }\n\n    this.notifier.beforeTestResultWrite(testResult);\n\n    this.writer.writeResult(testResult);\n    this.state.deleteTestResult(uuid);\n\n    this.notifier.afterTestResultWrite(testResult);\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    return this.stepStack.currentStep(rootUuid);\n  };\n\n  startStep = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    result: Partial<StepResult>,\n  ): string | undefined => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not start test step: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      start: Date.now(),\n      ...result,\n    };\n    parent.steps.push(stepResult);\n    const stepUuid = randomUuid();\n    this.state.setStepResult(stepUuid, stepResult);\n\n    this.stepStack.addStep(rootUuid, stepUuid);\n\n    return stepUuid;\n  };\n\n  updateStep = (uuid: string, updateFunc: (stepResult: StepResult) => void) => {\n    const step = this.state.getStepResult(uuid)!;\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(step);\n  };\n\n  stopStep = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const step = this.state.getStepResult(uuid);\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.notifier.beforeStepStop(step);\n\n    const startStop = this.#calculateTimings(step.start, opts?.stop, opts?.duration);\n    step.start = startStop.start;\n    step.stop = startStop.stop;\n\n    step.stage = Stage.FINISHED;\n\n    this.stepStack.removeStep(uuid);\n\n    this.notifier.afterStepStop(step);\n  };\n\n  writeAttachment = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    attachmentName: string,\n    attachmentContentOrPath: Buffer | string,\n    options: AttachmentOptions & { wrapInStep?: boolean; timestamp?: number },\n  ) => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not write test attachment: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n\n    const isPath = typeof attachmentContentOrPath === \"string\";\n    const fileExtension = options.fileExtension ?? (isPath ? extname(attachmentContentOrPath) : undefined);\n    const attachmentFileName = buildAttachmentFileName({\n      contentType: options.contentType,\n      fileExtension,\n    });\n\n    if (isPath) {\n      this.writer.writeAttachmentFromPath(attachmentFileName, attachmentContentOrPath);\n    } else {\n      this.writer.writeAttachment(attachmentFileName, attachmentContentOrPath);\n    }\n\n    const attachment: Attachment = {\n      name: attachmentName,\n      source: attachmentFileName,\n      type: options.contentType,\n    };\n\n    if (options.wrapInStep) {\n      const { timestamp = Date.now() } = options;\n      parent.steps.push({\n        name: attachmentName,\n        attachments: [attachment],\n        start: timestamp,\n        stop: timestamp,\n      } as StepResult);\n    } else {\n      parent.attachments.push(attachment);\n    }\n  };\n\n  writeEnvironmentInfo = () => {\n    if (!this.environmentInfo) {\n      return;\n    }\n\n    this.writer.writeEnvironmentInfo(this.environmentInfo);\n  };\n\n  writeCategoriesDefinitions = () => {\n    if (!this.categories) {\n      return;\n    }\n\n    const serializedCategories = this.categories.map((c) => {\n      if (c.messageRegex instanceof RegExp) {\n        c.messageRegex = c.messageRegex.source;\n      }\n\n      if (c.traceRegex instanceof RegExp) {\n        c.traceRegex = c.traceRegex.source;\n      }\n\n      return c;\n    });\n\n    this.writer.writeCategoriesDefinitions(serializedCategories);\n  };\n\n  applyRuntimeMessages = (rootUuid: string, messages: RuntimeMessage[]) => {\n    messages.forEach((message) => {\n      switch (message.type) {\n        case \"metadata\":\n          this.#handleMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_metadata\":\n          this.#handleStepMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_start\":\n          this.#handleStartStepMessage(rootUuid, message.data);\n          return;\n        case \"step_stop\":\n          this.#handleStopStepMessage(rootUuid, message.data);\n          return;\n        case \"attachment_content\":\n          this.#handleAttachmentContentMessage(rootUuid, message.data);\n          return;\n        case \"attachment_path\":\n          this.#handleAttachmentPathMessage(rootUuid, message.data);\n          return;\n        default:\n          // eslint-disable-next-line no-console\n          console.error(`could not apply runtime messages: unknown message ${JSON.stringify(message)}`);\n          return;\n      }\n    });\n  };\n\n  #handleMetadataMessage = (rootUuid: string, message: RuntimeMetadataMessage[\"data\"]) => {\n    // only display name could be set to fixture.\n    const fixtureResult = this.state.getWrappedFixtureResult(rootUuid);\n    const { links, labels, parameters, displayName, testCaseId, historyId, description, descriptionHtml } = message;\n\n    if (fixtureResult) {\n      if (displayName) {\n        this.updateFixture(rootUuid, (result) => {\n          result.name = displayName;\n        });\n      }\n\n      if (historyId) {\n        // eslint-disable-next-line no-console\n        console.error(\"historyId can't be changed within test fixtures\");\n      }\n      if (testCaseId) {\n        // eslint-disable-next-line no-console\n        console.error(\"testCaseId can't be changed within test fixtures\");\n      }\n\n      if (links || labels || parameters || description || descriptionHtml) {\n        // in some frameworks, afterEach methods can be executed before test stop event, while\n        // in others after. To remove the possible undetermined behaviour we only allow\n        // using runtime metadata API in before hooks.\n        if (fixtureResult.type === \"after\") {\n          // eslint-disable-next-line no-console\n          console.error(\"metadata messages isn't supported for after test fixtures\");\n          return;\n        }\n\n        this.updateScope(fixtureResult.scopeUuid, (scope) => {\n          if (links) {\n            scope.links = [...scope.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n          }\n          if (labels) {\n            scope.labels = [...scope.labels, ...labels];\n          }\n          if (parameters) {\n            scope.parameters = [...scope.parameters, ...parameters];\n          }\n          if (description) {\n            scope.description = description;\n          }\n          if (descriptionHtml) {\n            scope.descriptionHtml = descriptionHtml;\n          }\n        });\n      }\n\n      return;\n    }\n\n    this.updateTest(rootUuid, (result) => {\n      if (links) {\n        result.links = [...result.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n      }\n      if (labels) {\n        result.labels = [...result.labels, ...labels];\n      }\n      if (parameters) {\n        result.parameters = [...result.parameters, ...parameters];\n      }\n      if (displayName) {\n        result.name = displayName;\n      }\n      if (testCaseId) {\n        result.testCaseId = testCaseId;\n      }\n      if (historyId) {\n        result.historyId = historyId;\n      }\n      if (description) {\n        result.description = description;\n      }\n      if (descriptionHtml) {\n        result.descriptionHtml = descriptionHtml;\n      }\n    });\n  };\n\n  #handleStepMetadataMessage = (rootUuid: string, message: RuntimeStepMetadataMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step metadata message: no step is running\");\n      return;\n    }\n    const { name, parameters } = message;\n    this.updateStep(stepUuid, (stepResult) => {\n      if (name) {\n        stepResult.name = name;\n      }\n      if (parameters) {\n        stepResult.parameters = [...stepResult.parameters, ...parameters];\n      }\n    });\n  };\n\n  #handleStartStepMessage = (rootUuid: string, message: RuntimeStartStepMessage[\"data\"]) => {\n    this.startStep(rootUuid, undefined, { ...message });\n  };\n\n  #handleStopStepMessage = (rootUuid: string, message: RuntimeStopStepMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step stop message: no step is running\");\n      return;\n    }\n    this.updateStep(stepUuid, (result) => {\n      if (message.status && !result.status) {\n        result.status = message.status;\n      }\n      if (message.statusDetails) {\n        result.statusDetails = { ...result.statusDetails, ...message.statusDetails };\n      }\n    });\n    this.stopStep(stepUuid, { stop: message.stop });\n  };\n\n  #handleAttachmentContentMessage = (rootUuid: string, message: RuntimeAttachmentContentMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, Buffer.from(message.content, message.encoding), {\n      encoding: message.encoding,\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #handleAttachmentPathMessage = (rootUuid: string, message: RuntimeAttachmentPathMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, message.path, {\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #findParent = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n  ): FixtureResult | TestResult | StepResult | undefined => {\n    const root = this.state.getExecutionItem(rootUuid);\n    if (!root) {\n      return;\n    }\n\n    if (parentStepUuid === null) {\n      return root;\n    } else if (parentStepUuid === undefined) {\n      const stepUuid = this.currentStep(rootUuid);\n      return stepUuid ? this.state.getStepResult(stepUuid) : root;\n    } else {\n      return this.state.getStepResult(parentStepUuid);\n    }\n  };\n\n  #writeFixturesOfScope = ({ fixtures, tests }: TestScope) => {\n    const writtenFixtures = new Set<string>();\n    if (tests.length) {\n      for (const wrappedFixture of fixtures) {\n        if (!writtenFixtures.has(wrappedFixture.uuid)) {\n          this.#writeContainer(tests, wrappedFixture);\n          this.state.deleteFixtureResult(wrappedFixture.uuid);\n          writtenFixtures.add(wrappedFixture.uuid);\n        }\n      }\n    }\n  };\n\n  #writeContainer = (tests: string[], wrappedFixture: FixtureResultWrapper) => {\n    const fixture = wrappedFixture.value;\n    const befores = wrappedFixture.type === \"before\" ? [wrappedFixture.value] : [];\n    const afters = wrappedFixture.type === \"after\" ? [wrappedFixture.value] : [];\n    this.writer.writeGroup({\n      uuid: wrappedFixture.uuid,\n      name: fixture.name,\n      children: [...new Set(tests)],\n      befores,\n      afters,\n    });\n  };\n\n  #calculateTimings = (\n    start?: number,\n    stop?: number,\n    duration?: number,\n  ): {\n    start?: number;\n    stop?: number;\n  } => {\n    const result: { start?: number; stop?: number } = { start, stop };\n    if (duration) {\n      const normalisedDuration = Math.max(0, duration);\n      if (result.stop !== undefined) {\n        result.start = result.stop - normalisedDuration;\n      } else if (result.start !== undefined) {\n        result.stop = result.start + normalisedDuration;\n      } else {\n        result.stop = Date.now();\n        result.start = result.stop - normalisedDuration;\n      }\n    } else {\n      if (result.stop === undefined) {\n        result.stop = Date.now();\n      }\n      if (result.start === undefined) {\n        result.start = result.stop;\n      }\n    }\n    return {\n      start: result.start ? Math.round(result.start) : undefined,\n      stop: result.stop ? Math.round(result.stop) : undefined,\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]}